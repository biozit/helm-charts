apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "osdf-origin-public.fullname" . }}
  labels:
    app: {{ template "osdf-origin-public.name" . }}
    release: {{ .Release.Name }}
    instance: {{ .Values.Instance | quote }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ template "osdf-origin-public.name" . }}
      release: {{ .Release.Name }}
      instance: {{ .Values.Instance | quote }}

  template:
    metadata:
      labels:
        app: {{ template "osdf-origin-public.name" . }}
        release: {{ .Release.Name }}
        instance: {{ .Values.Instance | quote }}

    spec:
      volumes:
      - name: xcache-namespace
        persistentVolumeClaim:
          claimName: {{ .Values.Origin.DataVolume }}

      # TODO copy host cert/key stuff from osg-hosted-ce

      containers:
        - name: origin
          image: "{{ .Values.Containers.Origin.Image }}"
          imagePullPolicy: {{ .Values.Containers.Origin.ImagePullPolicy }}
          env:
          - name: XC_RESOURCENAME
            value: "{{ .Values.Topology.ResourceName }}"
          - name: ORIGIN_FQDN
            value: "{{ .Values.Topology.FQDN }}"
          - name: XC_ROOTDIR
            value: "/xcache/namespace"
          - name: XC_ORIGINEXPORT
            value: "{{ .Values.Origin.MainExport }}"

          resources:
            requests:
              cpu: "{{ .Values.Resources.CPU }}"
              memory: "{{ .Values.Resources.Memory }}"
            limits:
              cpu: "{{ .Values.Resources.CPU }}"
              memory: "{{ .Values.Resources.Memory }}"
          livenessProbe:
            tcpSocket:
              port: 1094
            initialDelaySeconds: 600
            periodSeconds: 60
          ports:
            - containerPort: 1094
              hostPort: 1094
              protocol: TCP
          volumeMounts:
            - mountPath: /xcache/namespace
              name: xcache-namespace
